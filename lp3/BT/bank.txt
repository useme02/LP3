// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.0;

contract Bank {
    address public accHolder;
    uint256 private balance;

    constructor() {
        accHolder = msg.sender;
        balance = 0;
    }

    // Modifier to restrict access to the account holder
    modifier onlyAccHolder() {
        require(msg.sender == accHolder, "Only the account holder can perform this action.");
        _;
    }

    function withdraw(uint256 amount) public onlyAccHolder 
    {
        require(amount > 0, "Withdrawal amount must be greater than zero.");
        require(amount <= balance, "Insufficient balance for withdrawal.");
        
        payable(accHolder).transfer(amount); // Transfer the specified amount to the account holder
        balance -= amount; // Deduct the withdrawn amount from the balance
    }

    function deposit() public payable onlyAccHolder
    {
        require(msg.value > 0, "Deposit amount should be greater than zero.");
        balance += msg.value;
    }

    // Function to show the balance
    function showbalance() public view returns (uint256) 
    {
        return balance;
    }
}
